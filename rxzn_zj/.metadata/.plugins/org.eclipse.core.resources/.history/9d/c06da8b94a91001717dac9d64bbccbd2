//#include "msp430f2272.h"
#include "define.h"
#include "task.h"
#include "interrupt.h"

extern INT8U 	b_node_configured;
static INT16U  hbcnt    	  = 0;
static INT16U  run_period	  = 0;
static INT8U   BlinkIntvCnt   = 0;
ulong  _local_time_tick;

#define INTERVAL_TIME 10 // 10ms
void sys_clock_tick(void){
	_local_time_tick += INTERVAL_TIME;
}

ulong local_ticktime(void){
	return _local_time_tick	;
}

bool timeout(ulong last_time, ulong ms){
	return (bool)((_local_time_tick - last_time) > ms);
}

static void process_heart_blink_event(void){
	
	if (++BlinkIntvCnt >= BOT_BLINK_INTVL){
		BlinkIntvCnt = 0;
		 	
		 if (LED_SWITCH_ON){
		 	if (BOTTLE == ContainerType){
		 		LED_STATUS_BLINK;
		 	}
		 	else{
		 		LED_STATUS_ON;
		 	}
		 }
	}
}

#pragma vector = TIMERB0_VECTOR
__interrupt void Timer_B(void){	
	sys_clock_tick();
	//process_heart_blink_event();
}
